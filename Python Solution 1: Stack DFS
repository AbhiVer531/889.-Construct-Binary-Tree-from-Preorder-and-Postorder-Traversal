# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def constructFromPrePost(self, preorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        if not preorder or not postorder:
            return None
        root = TreeNode(preorder[0])  
        stack = [root]  
        postIndex = 0 
        for i in range(1, len(preorder)):  
            node = TreeNode(preorder[i])
            while stack and stack[-1].val == postorder[postIndex]:  
                stack.pop()
                postIndex += 1  
            parent = stack[-1]  
            if not parent.left:
                parent.left = node
            else:
                parent.right = node  
            stack.append(node) 
        return root
